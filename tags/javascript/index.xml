<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>javascript on CYQ 博客</title><link>https://yuqingc.github.io/tags/javascript/</link><description>Recent content in javascript on CYQ 博客</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 22 Oct 2020 13:50:29 +0800</lastBuildDate><atom:link href="https://yuqingc.github.io/tags/javascript/index.xml" rel="self" type="application/rss+xml"/><item><title>Hooks 实战 &amp; 防坑 &amp; 优化</title><link>https://yuqingc.github.io/posts/2020/hooks-in-use/</link><pubDate>Thu, 22 Oct 2020 13:50:29 +0800</pubDate><guid>https://yuqingc.github.io/posts/2020/hooks-in-use/</guid><description>&lt;p>使用 Hook 需要尝试丢弃 Class 组件开发的思维。本文假设你了解 Hook 的基本用法和 API。如果对 Hook 还不太熟悉，可以先看一下&lt;a href="https://zh-hans.reactjs.org/docs/hooks-intro.html">官网教程&lt;/a>。&lt;/p></description></item><item><title>JS 异步背后的故事 —— Event Loop</title><link>https://yuqingc.github.io/posts/2020/event-loop/</link><pubDate>Mon, 05 Oct 2020 16:04:16 +0800</pubDate><guid>https://yuqingc.github.io/posts/2020/event-loop/</guid><description>异步、Event Loop、Microtask 这些词语对于一个 JavaScript 开发者来说并不陌生，今天专门抽出一篇文</description></item><item><title>关于 JS 的事件，你可能忽略了这件事</title><link>https://yuqingc.github.io/posts/2020/async-events/</link><pubDate>Fri, 02 Oct 2020 10:50:17 +0800</pubDate><guid>https://yuqingc.github.io/posts/2020/async-events/</guid><description>先看这一段代码 const btn = document.getElementById(&amp;#39;btn&amp;#39;); btn.addEventListener(&amp;#39;click&amp;#39;, () =&amp;gt; { Promise.resolve().then(() =&amp;gt; console.log(&amp;#39;1a&amp;#39;)); console.log(&amp;#39;1b&amp;#39;); }); btn.addEventListener(&amp;#39;click&amp;#39;, () =&amp;gt; { Promise.resolve().then(() =&amp;gt; console.log(&amp;#39;2a&amp;#39;)); console.log(&amp;#39;2b&amp;#39;); }); 思考一下，当鼠标点击 btn 元素时，控制台会打印</description></item><item><title>使用 Node.js 实现一个简单的 SSE 服务</title><link>https://yuqingc.github.io/posts/2019/sse-express/</link><pubDate>Sat, 28 Dec 2019 15:27:12 +0800</pubDate><guid>https://yuqingc.github.io/posts/2019/sse-express/</guid><description>&lt;p>网上有很多 Demo 介绍了如何使用 SSE。但是真正向客户端发送请求是一个持续的过程，因此需要有一个很好的解决方案来管理这些长链接。目前网上的一些 Demo 和博客基本上都是在请求的 Controller 中直接向客户端发送。所以它们也只能是 Demo。&lt;/p></description></item><item><title>【待翻译】What's New in ECMAScript 2020 (ES11)</title><link>https://yuqingc.github.io/posts/2019/new-of-es2020/</link><pubDate>Tue, 03 Dec 2019 19:59:01 +0800</pubDate><guid>https://yuqingc.github.io/posts/2019/new-of-es2020/</guid><description>&lt;p>The latest draft of &lt;a href="https://tc39.es/ecma262/">ECMAScript 2020&lt;/a> was release on November 27 2019. All proposals in Stage 4 are included in this version of the language.&lt;/p></description></item><item><title>JS 代码段集锦</title><link>https://yuqingc.github.io/posts/2019/snippets01/</link><pubDate>Wed, 24 Jul 2019 15:42:31 +0800</pubDate><guid>https://yuqingc.github.io/posts/2019/snippets01/</guid><description/></item><item><title>【待迁移】React 和 this</title><link>https://yuqingc.github.io/posts/2019/you-might-not-know-this/</link><pubDate>Fri, 21 Jun 2019 12:13:37 +0800</pubDate><guid>https://yuqingc.github.io/posts/2019/you-might-not-know-this/</guid><description>中文版请戳我 Motivation If you are familiar with React.js, you should know that if you add an event listener to an element like the following, you get a syntax error when you try triggering the click event. // JSX class Test extends React.Component { handleClick ()</description></item><item><title>记忆化技术介绍</title><link>https://yuqingc.github.io/posts/2019/memoize-react/</link><pubDate>Mon, 18 Mar 2019 12:22:37 +0800</pubDate><guid>https://yuqingc.github.io/posts/2019/memoize-react/</guid><description>动机 在开发 React 项目中，有一种场景很常见：从服务器中请求了一个数据结构，这个结构非常复杂，甚至还有一些垃</description></item></channel></rss>